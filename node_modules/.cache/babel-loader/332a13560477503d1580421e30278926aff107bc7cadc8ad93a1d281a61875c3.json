{"ast":null,"code":"import { React, useMemo } from \"react\";\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nexport const AppointmentForm = _ref => {\n  let {\n    contacts,\n    title,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setDate,\n    time,\n    setTime,\n    handleSubmit\n  } = _ref;\n  /* GET CONTACT NAMES */\n  /* const contactNames = useMemo(() => {\r\n    return contacts.map((contact) => contact.name);\r\n  }, [contacts]); */\n\n  return {/* <form onSubmit={handleSubmit}>\r\n           <input\r\n               type=\"text\"\r\n               name=\"name\"\r\n               value={title}\r\n               onChange={(e) => setTitle(e.target.value)}\r\n               required\r\n               placeholder=\"Appointment Name\"\r\n               aria-label=\"Appointment Name\"\r\n             />\r\n              <ContactPicker\r\n               name=\"contact\"\r\n               value={contact}\r\n               contacts={contactNames}\r\n               onChange={(e) => setContact(e.target.value)}\r\n             />\r\n             <input\r\n               type=\"date\"\r\n               name=\"date\"\r\n               min={getTodayString()}\r\n               value={date}\r\n               onChange={(e) => setDate(e.target.value)}\r\n               required\r\n               aria-label=\"Date Picker\"\r\n             />\r\n             <input\r\n               type=\"time\"\r\n               name=\"time\"\r\n               value={time}\r\n               onChange={(e) => setTime(e.target.value)}\r\n               required\r\n               aria-label=\"Time Picker\"\r\n             />\r\n             <input aria-label=\"Add Appointment\" type=\"submit\" value=\"Add Appointment\" />\r\n          </form> */};\n};\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useMemo","ContactPicker","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","AppointmentForm","_ref","contacts","title","setTitle","contact","setContact","date","setDate","time","setTime","handleSubmit","_c","$RefreshReg$"],"sources":["D:/__TRABAJOS/PROGRA/_forPortfolio_/TimeManager/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import {React, useMemo} from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  /* GET CONTACT NAMES */\r\n  /* const contactNames = useMemo(() => {\r\n    return contacts.map((contact) => contact.name);\r\n  }, [contacts]); */\r\n\r\n  return (\r\n    {/* <form onSubmit={handleSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n          placeholder=\"Appointment Name\"\r\n          aria-label=\"Appointment Name\"\r\n        />\r\n         <ContactPicker\r\n          name=\"contact\"\r\n          value={contact}\r\n          contacts={contactNames}\r\n          onChange={(e) => setContact(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          min={getTodayString()}\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          required\r\n          aria-label=\"Date Picker\"\r\n        />\r\n        <input\r\n          type=\"time\"\r\n          name=\"time\"\r\n          value={time}\r\n          onChange={(e) => setTime(e.target.value)}\r\n          required\r\n          aria-label=\"Time Picker\"\r\n        />\r\n        <input aria-label=\"Add Appointment\" type=\"submit\" value=\"Add Appointment\" />\r\n    </form> */}\r\n  );\r\n};\r\n"],"mappings":"AAAA,SAAQA,KAAK,EAAEC,OAAO,QAAO,OAAO;AACpC,SAASC,aAAa,QAAQ,gCAAgC;AAE9D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAM,CAACC,KAAK,EAAEC,GAAG,EAAEC,IAAI,CAAC,GAAG,IAAIC,IAAI,EAAE,CAClCC,kBAAkB,CAAC,OAAO,CAAC,CAC3BC,KAAK,CAAC,GAAG,CAAC;EACb,OAAQ,GAAEH,IAAK,IAAGF,KAAK,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGL,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;AACpE,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAWzB;EAAA,IAX0B;IAC9BC,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC,UAAU;IACVC,IAAI;IACJC,OAAO;IACPC,IAAI;IACJC,OAAO;IACPC;EACF,CAAC,GAAAV,IAAA;EACC;EACA;AACF;AACA;;EAEE,OACE,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAlCK,CAkCU;AAEf,CAAC;AAACW,EAAA,GAtDWZ,eAAe;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}