{"ast":null,"code":"var _jsxFileName = \"D:\\\\__TRABAJOS\\\\PROGRA\\\\_forPortfolio_\\\\TimeManager\\\\src\\\\containers\\\\contactsPage\\\\ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = _ref => {\n  _s();\n  let {\n    contacts,\n    addContact\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [duplicate, setDuplicate] = useState(false);\n\n  /* Only add a new contact on form submission if it does not duplicate an existing contact’s name */\n  /* Add contact and clear form\r\n   const handleSubmit = (e) => {\r\n     e.preventDefault();\r\n     if (!duplicate){\r\n       addContact(name, phoneNumber, email);\r\n       setName(\"\");\r\n       setPhoneNumber(\"\");\r\n       setEmail(\"\");\r\n     }\r\n   };\r\n  \n   /*\r\n   Check for contact name in the \r\n   contacts array variable in props\r\n   */\n  useEffect(() => {\n    /* Check if contact is already in contacts */\n    const searcher = () => {\n      const result = contacts.find(contact => contact.name === name);\n      if (result !== undefined) {\n        return true;\n      } else {\n        return false;\n      }\n      ;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"aUbMact7aXx2zzqKpm7JyL8slXY=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","ContactsPage","_ref","_s","contacts","addContact","name","setName","phoneNumber","setPhoneNumber","email","setEmail","duplicate","setDuplicate","searcher","result","find","contact","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/__TRABAJOS/PROGRA/_forPortfolio_/TimeManager/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({contacts, addContact}) => {\r\n\r\n const [name, setName] = useState(\"\");\r\n const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n const [email, setEmail] = useState(\"\");\r\n const [duplicate, setDuplicate]= useState(false);\r\n\r\n /* Only add a new contact on form submission if it does not duplicate an existing contact’s name */\r\n /* Add contact and clear form\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!duplicate){\r\n      addContact(name, phoneNumber, email);\r\n      setName(\"\");\r\n      setPhoneNumber(\"\");\r\n      setEmail(\"\");\r\n    }\r\n  };\r\n\r\n  /*\r\n  Check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n useEffect(() =>{\r\n  /* Check if contact is already in contacts */\r\n  const searcher = () =>{\r\n    const result = contacts.find(contact => contact.name === name);\r\n    if (result !== undefined){\r\n      return true;\r\n    } else {\r\n      return false;\r\n    };\r\n  };\r\n\r\n\r\n\r\n },[]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,QAAQ,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAACC,QAAQ;IAAEC;EAAU,CAAC,GAAAH,IAAA;EAElD,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAElB,QAAQ,CAAC,KAAK,CAAC;;EAEhD;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,SAAS,CAAC,MAAK;IACd;IACA,MAAMkB,QAAQ,GAAGA,CAAA,KAAK;MACpB,MAAMC,MAAM,GAAGX,QAAQ,CAACY,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACX,IAAI,KAAKA,IAAI,CAAC;MAC9D,IAAIS,MAAM,KAAKG,SAAS,EAAC;QACvB,OAAO,IAAI;MACb,CAAC,MAAM;QACL,OAAO,KAAK;MACd;MAAC;IACH,CAAC;EAIF,CAAC,EAAC,EAAE,CAAC;EAEJ,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACZ,eACVvB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNvB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV,CAAC;AAACpB,EAAA,CAjDWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}