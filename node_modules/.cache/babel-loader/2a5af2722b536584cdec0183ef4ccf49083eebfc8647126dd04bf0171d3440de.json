{"ast":null,"code":"var _jsxFileName = \"D:\\\\__TRABAJOS\\\\PROGRA\\\\_forPortfolio_\\\\TimeManager\\\\src\\\\components\\\\appointmentForm\\\\AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport { React, useMemo } from \"react\";\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTodayString = () => {\n  const [month, day, year] = new Date().toLocaleDateString(\"en-US\").split(\"/\");\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n};\nexport const AppointmentForm = _ref => {\n  _s();\n  let {\n    contacts,\n    title,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setDate,\n    time,\n    setTime,\n    handleSubmit\n  } = _ref;\n  /* GET CONTACT NAMES */\n  const contactNames = useMemo(() => {\n    return contacts.map(contact => contact.name);\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      required: true,\n      placeholder: \"Appointment Name\",\n      \"aria-label\": \"Appointment Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n      name: \"contact\",\n      value: contact,\n      contacts: contactNames,\n      onChange: e => setContact(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      min: getTodayString(),\n      value: date,\n      onChange: e => setDate(e.target.value),\n      required: true,\n      \"aria-label\": \"Date Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      name: \"time\",\n      value: time,\n      onChange: e => setTime(e.target.value),\n      required: true,\n      \"aria-label\": \"Time Picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      value: time,\n      onChange: e => setTime(e.target.value),\n      \"aria-label\": \"Appointment Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      \"aria-label\": \"Add Appointment\",\n      type: \"submit\",\n      value: \"Add Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentForm, \"9tur8ZuM/Pgiy8Lm5dK4dfxE0e4=\");\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useMemo","ContactPicker","jsxDEV","_jsxDEV","getTodayString","month","day","year","Date","toLocaleDateString","split","padStart","AppointmentForm","_ref","_s","contacts","title","setTitle","contact","setContact","date","setDate","time","setTime","handleSubmit","contactNames","map","name","onSubmit","children","type","value","onChange","e","target","required","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","min","_c","$RefreshReg$"],"sources":["D:/__TRABAJOS/PROGRA/_forPortfolio_/TimeManager/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import {React, useMemo} from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nconst getTodayString = () => {\r\n  const [month, day, year] = new Date()\r\n    .toLocaleDateString(\"en-US\")\r\n    .split(\"/\");\r\n  return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  /* GET CONTACT NAMES */\r\n  const contactNames = useMemo(() => {\r\n    return contacts.map((contact) => contact.name);\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n          placeholder=\"Appointment Name\"\r\n          aria-label=\"Appointment Name\"\r\n        />\r\n         <ContactPicker\r\n          name=\"contact\"\r\n          value={contact}\r\n          contacts={contactNames}\r\n          onChange={(e) => setContact(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          min={getTodayString()}\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          required\r\n          aria-label=\"Date Picker\"\r\n        />\r\n        <input\r\n          type=\"time\"\r\n          name=\"time\"\r\n          value={time}\r\n          onChange={(e) => setTime(e.target.value)}\r\n          required\r\n          aria-label=\"Time Picker\"\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          value={time}\r\n          onChange={(e) => setTime(e.target.value)}\r\n\r\n          aria-label=\"Appointment Description\"\r\n        />\r\n        <input aria-label=\"Add Appointment\" type=\"submit\" value=\"Add Appointment\" />\r\n    </form>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}